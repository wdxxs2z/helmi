-
  _id: ab53df4d-c279-4880-94f7-65e7d72b7834
  _name: mariadb
  description: "MariaDB as a Service"
  chart: stable/mariadb
  chart-version: 1.0.7
  chart-values:
    mariadbUser: "{{ lookup('username', 'mariadbUser') }}"
    mariadbPassword: "{{ lookup('password', 'mariadbPassword') }}"
    mariadbRootPassword: "{{ lookup('password', 'mariadbRootPassword') }}"
    mariadbDatabase: db
  user-credentials:
    uri: "mysql://{{ lookup('username', 'mariadbUser') }}:{{ lookup('password', 'mariadbPassword') }}@{{ lookup('release', 'name') }}-mariadb.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port') }}/{{ lookup('value', 'mariadbDatabase') }}"
    jdbcUrl: "jdbc:mysql://{{ lookup('release', 'name') }}-mariadb.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port') }}/{{ lookup('value', 'mariadbDatabase') }}?user={{ lookup('username', 'mariadbUser') }}\u0026password={{ lookup('password', 'mariadbPassword') }}"
    username: "{{ lookup('username', 'mariadbUser') }}"
    password: "{{ lookup('password', 'mariadbPassword') }}"
    database: "{{ lookup('value', 'mariadbDatabase') }}"
    hostname: "{{ lookup('release', 'name') }}-mariadb.{{ lookup('release', 'namespace') }}.svc.cluster.local"
    port: "{{ lookup('cluster', 'port') }}"
  plans:
  -
    _id: e79306ef-4e10-4e3d-b38e-ffce88c90f59
    _name: free
    description: "Free MariaDB Instance"
    chart-values:
        persistence.size: 8Gi
        persistence.storageClass: local-storage
-
  _id: 8dda5a6f-f796-4b52-806f-4129d7576d6e
  _name: minio
  description: "S3 Object Store as a Service"
  chart: stable/minio
  chart-version: 0.3.0
  chart-values:
    mode: "standalone"
    accessKey: "AKIAIOSFODNN7EXAMPLE"
    secretKey: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  user-credentials:
    uri: "http://{{ lookup('value', 'accessKey') }}:{{ lookup('value', 'secretKey') }}@{{ lookup('release', 'name') }}-minio.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port') }}/"
    endpoint: "{{ lookup('cluster', 'address') }}:{{ lookup('cluster', 'port') }}"
    accessKey: "{{ lookup('value', 'accessKey') }}"
    secretKey: "{{ lookup('value', 'secretKey') }}"
    hostname: "{{ lookup('release', 'name') }}-minio.{{ lookup('release', 'namespace') }}.svc.cluster.local"
    port: "{{ lookup('cluster', 'port') }}"
    region: "us-west-1"
    pathStyleAccess: true
  plans:
  -
    _id: f003f191-c250-4e85-9abd-038af629ad71
    _name: free
    description: "Free S3 Object Store Instance"
    chart-values:
      persistence.size: 8Gi
      persistence.storageClass: local-storage
-
  _id: 2f1e7c63-0511-4209-aa7f-6bdee7ffb2b6
  _name: "rabbitmq"
  description: "RabbitMQ as a Service"
  chart: stable/rabbitmq
  chart-version: 0.6.8
  chart-values:
    rabbitmqUsername: "{{ lookup('username', 'rabbitmqUsername') }}"
    rabbitmqPassword: "{{ lookup('password', 'rabbitmqPassword') }}"
  user-credentials:
    uri: "amqp://{{ lookup('username', 'rabbitmqUsername') }}:{{ lookup('password', 'rabbitmqPassword') }}@{{ lookup('release', 'name') }}-rabbitmq.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port:5672') }}/"
    username: "{{ lookup('username', 'rabbitmqUsername') }}"
    password: "{{ lookup('password', 'rabbitmqPassword') }}"
    hostname: "{{ lookup('release', 'name') }}-rabbitmq.{{ lookup('release', 'namespace') }}.svc.cluster.local"
    port: "{{ lookup('cluster', 'port:5672') }}"
    vhost: ""
    ssl: false
  plans:
  -
    _id: d2badac0-8e41-4588-a9fc-0e662c480610
    _name: free
    description: "Free RabbitMQ Instance"
    chart-values:
      persistence.size: 8Gi
      persistence.storageClass: local-storage
-
  _id: b4280104-b578-4156-a69c-8961bcdfa8c0
  _name: "mongodb"
  description: "MongoDB as a Service"
  chart: stable/mongodb
  chart-version: 2.0.1
  chart-values:
    mongodbUsername: "{{ lookup('username', 'mongodbUsername') }}"
    mongodbPassword: "{{ lookup('password', 'mongodbPassword') }}"
    mongodbRootPassword:  "{{ lookup('password', 'mongodbRootPassword') }}"
    mongodbDatabase: db
  user-credentials:
    uri: "mongodb://{{ lookup('username', 'mongodbUsername') }}:{{ lookup('password', 'mongodbPassword') }}@{{ lookup('release', 'name') }}-mongodb.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port') }}/{{ lookup('value', 'mongodbDatabase') }}"
    username: "{{ lookup('username', 'mongodbUsername') }}"
    password: "{{ lookup('password', 'mongodbPassword') }}"
    database: "{{ lookup('value', 'mongodbDatabase') }}"
    hostname: "{{ lookup('release', 'name') }}-mongodb.{{ lookup('release', 'namespace') }}.svc.cluster.local"
    port: "{{ lookup('cluster', 'port') }}"
  plans:
  -
    _id: 905b1f0e-c815-41d4-b3e4-6ccb602b9e8e
    _name: free
    description: "Free MongoDB Instance"
    chart-values:
      persistence.size: 8Gi
      persistence.storageClass: local-storage
-
  _id: c26e6c7a-fe17-4568-ac4c-46545ab1d178
  _name: "redis"
  description: "Redis as a Service"
  chart: stable/redis
  chart-version: 0.9.0
  chart-values:
    redisPassword: "{{ lookup('password', 'redisPassword') }}"
  user-credentials:
    uri: "redis://:{{ lookup('password', 'redisPassword') }}@{{ lookup('release', 'name') }}-redis.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port') }}"
    password: "{{ lookup('password', 'redisPassword') }}"
    hostname: "{{ lookup('cluster', 'address') }}"
    port: "{{ lookup('cluster', 'port') }}"
  plans:
  -
    _id: 381c8dd1-676b-4d1f-ae00-97e8304f966f
    _name: free
    description: "Free Redis Instance"
    chart-values:
      persistence.size: 8Gi
      persistence.storageClass: local-storage
-
  _id: 201cb950-e640-4453-9d91-4708ea0a1342
  _name: "cassandra"
  description: "Cassandra as a Service"
  chart: monostream/cassandra
  chart-version: 0.2.7
  chart-values:
    cassandraUsername: "{{ lookup('username', 'cassandraUsername') }}"
    cassandraPassword: "{{ lookup('password', 'cassandraPassword') }}"
  user-credentials:
    jdbcUrl: "jdbc:cassandra://{{ lookup('username', 'cassandraUsername') }}:{{ lookup('password', 'cassandraPassword') }}@{{ lookup('release', 'name') }}-cassandra.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port:9042') }}"
    uri: "cassandra://{{ lookup('username', 'cassandraUsername') }}:{{ lookup('password', 'cassandraPassword') }}@{{ lookup('release', 'name') }}-cassandra.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port:9042') }}"
    node_ips:
    - "{{ lookup('release', 'name') }}-cassandra.{{ lookup('release', 'namespace') }}.svc.cluster.local"
    cql_port: "{{ lookup('cluster', 'port:9042') }}"
    thrift_port: "{{ lookup('cluster', 'port:9160') }}"
    username: "{{ lookup('username', 'cassandraUsername') }}"
    password: "{{ lookup('password', 'cassandraPassword') }}"
  plans:
  -
    _id: 169d5466-12c9-4a89-a063-f72048b3d4c4
    _name: free
    description: "Free 3 Node Cassandra Instance"
    chart-values:
      persistence.size: 8Gi
      persistence.storageClass: local-storage
  -
    _id: 7b16d6aa-260a-4b8d-b12c-464d2cedb9d0
    _name: dev
    description: "Single Node Development Instance"
    chart-values:
      persistence.size: 8Gi
      persistence.storageClass: local-storage
      replicaCount: 1
      replicaMinAvailable: 0
-
  _id: 777f5478-5796-426a-ab8a-5d3dc5e1bdcc
  _name: "muescheli"
  description: "Virusscan as a Service"
  chart: monostream/muescheli
  chart-version: 0.1.5
  chart-values:
    environment.no_proxy: "{{ lookup('env', 'no_proxy') }}"
    environment.http_proxy: "{{ lookup('env', 'http_proxy') }}"
    environment.https_proxy: "{{ lookup('env', 'https_proxy') }}"
    muescheliUsername: "{{ lookup('username', 'muescheliUsername') }}"
    muescheliPassword: "{{ lookup('password', 'muescheliPassword') }}"
  user-credentials:
    uri: "http://{{ lookup('username', 'muescheliUsername') }}:{{ lookup('password', 'muescheliPassword') }}@{{ lookup('release', 'name') }}-muescheli.{{ lookup('release', 'namespace') }}.svc.cluster.local:{{ lookup('cluster', 'port:8091') }}"
    port: "{{ lookup('cluster', 'port:8091') }}"
    hostname: "{{ lookup('release', 'name') }}-muescheli.{{ lookup('release', 'namespace') }}.svc.cluster.local"
    username: "{{ lookup('username', 'muescheliUsername') }}"
    password: "{{ lookup('password', 'muescheliPassword') }}"
  plans:
  -
    _id: 75b7b1de-70ef-4499-b55c-e2337d320626
    _name: free
    description: "Free ClamAV Rest Instance"